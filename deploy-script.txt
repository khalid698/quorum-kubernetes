For Subnet calculation
https://www.davidc.net/sites/default/subnets/subnets.html

Deploy AKS via Azure Portal
https://learn.microsoft.com/en-us/azure/aks/learn/quick-kubernetes-deploy-portal?tabs=azure-cli

Install Docker
https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-20-04

Install Kubectl
https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/
sudo mv kubectl /usr/local/bin/.

Install Helm
https://v3-1-0.helm.sh/docs/intro/install/

Install Azure CLI
https://learn.microsoft.com/en-us/cli/azure/install-azure-cli-linux?pivots=apt

Commands list: 
az login 
az aks get-credentials --resource-group rg-usc-aks-besu-001 --name aks-usc-dev-node-001
kubectl config set-context --current --namespace=besu

Clone quorum-kubernetes repo
git clone https://github.com/ConsenSys/quorum-kubernetes.git

kubectl create namespace besu

helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo update
helm install monitoring prometheus-community/kube-prometheus-stack --version 34.10.0 --namespace=besu --values ./values/monitoring.yml --wait
kubectl --namespace besu apply -f  ./values/monitoring/


helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
helm repo update
helm install besu-monitoring-ingress ingress-nginx/ingress-nginx \
    --namespace besu \
    --set controller.ingressClassResource.name="monitoring-nginx" \
    --set controller.ingressClassResource.controllerValue="k8s.io/monitoring-ingress-nginx" \
    --set controller.replicaCount=1 \
    --set controller.nodeSelector."kubernetes\.io/os"=linux \
    --set defaultBackend.nodeSelector."kubernetes\.io/os"=linux \
    --set controller.admissionWebhooks.patch.nodeSelector."kubernetes\.io/os"=linux \
    --set controller.service.externalTrafficPolicy=Local

kubectl --namespace besu get services -o wide -w besu-monitoring-ingress-ingress-nginx-controller

kubectl apply -f ../ingress/ingress-rules-monitoring.yml

kubectl -n besu get services besu-monitoring-ingress-ingress-nginx-controller. --> external IP address

http://<INGRESS_IP>/d/XE4V0WGZz/besu-overview?orgId=1&refresh=10s

helm install genesis ./charts/besu-genesis --namespace besu --create-namespace --values ./values/genesis-besu.yml

helm install bootnode-1 ./charts/besu-node --namespace besu --values ./values/bootnode.yml
helm install bootnode-2 ./charts/besu-node --namespace besu --values ./values/bootnode.yml

helm install validator-1 ./charts/besu-node --namespace besu --values ./values/validator.yml
helm install validator-2 ./charts/besu-node --namespace besu --values ./values/validator.yml
helm install validator-3 ./charts/besu-node --namespace besu --values ./values/validator.yml
helm install validator-4 ./charts/besu-node --namespace besu --values ./values/validator.yml

Wait for a few minutes until the peers are discovered and the blocks are mined.

helm install rpc-1 ./charts/besu-node --namespace besu --values ./values/reader.yml

helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
helm repo update
helm install besu-network-ingress ingress-nginx/ingress-nginx \
    --namespace besu \
    --set controller.ingressClassResource.name="network-nginx" \
    --set controller.ingressClassResource.controllerValue="k8s.io/network-ingress-nginx" \
    --set controller.replicaCount=1 \
    --set controller.nodeSelector."kubernetes\.io/os"=linux \
    --set defaultBackend.nodeSelector."kubernetes\.io/os"=linux \
    --set controller.admissionWebhooks.patch.nodeSelector."kubernetes\.io/os"=linux \
    --set controller.service.externalTrafficPolicy=Local

kubectl apply -f ../ingress/ingress-rules-besu.yml

kubectl -n besu get services besu-network-ingress-ingress-nginx-controller. --> external IP address

curl -v -X POST -H "Content-Type: application/json" --data '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}' http://20.112.197.163/rpc

helm dependency update ./charts/blockscout
helm install blockscout ./charts/blockscout --namespace besu --values ./values/blockscout-besu.yaml


helm install quorum-explorer ./charts/explorer --namespace besu --values ./values/explorer-besu.yaml

============

https://learn.microsoft.com/en-us/azure/aks/use-azure-ad-pod-identity

az deployment create \
  --name besu-aks \
  --location centralus \
  --template-file ./arm/azuredeploy.json \
  --parameters env=dev location=centralus bcClient=besu
